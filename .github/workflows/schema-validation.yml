name: Run schema validation
on:
  pull_request:
  workflow_dispatch:

concurrency:
  group: $({ github.ref }) && $({ github.workflow })
  cancel-in-progress: true

jobs:
  schema-validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
      - name: Read Node version from .nvmrc
        id: node_version
        run: echo "NODE_VERSION=$(cat .nvmrc)" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      # Generate OpenApi spec
      # If the OpenApi spec has changed, it commits and pushes those changes back to the PR branch
      - name: Generate openApi docs from code
        run: npm run generate:openapi

      - name: Check if openApi docs have changed
        id: check_changes
        run: |
          if git diff --quiet src/api-docs/openapi.yaml src/api-docs/openapi.json; then
           echo "changes=false" >> $GITHUB_ENV
          else
           echo "changes=true" >> $GITHUB_ENV
          fi
      
      - name: Commit and push OpenAPI changes
        if: env.changes == 'true'
        uses: EndBug/add-and-commit@v9
        with: 
          author_name: 'GitHub Actions'
          author_email: 'actions@github.com'
          message: 'chore: update OpenApi spec'
          add: 'src/api-docs/openapi.yaml src/api-docs/openapi.json'
          push: true
          github_token: ${{ secrets.PAT_TOKEN }}
    
      - name: Create empty commit to re-run checks
        if: env.changes == 'true'
        run: |
          git commit --allow-empty -m "chore: Re-run checks after OpenApi update"
          git push

      - name: Fetch main branch for OPTIC
        run: git fetch --depth=1 origin main:main

      - name: OPTIC diff
        run: npm run optic:diff
